<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="package com.galaxyinternet.model.resource.RoleResource" >
  <resultMap id="BaseResultMap" type="com.galaxyinternet.model.resource.RoleResource" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="role_id" property="roleId" jdbcType="BIGINT" />
    <result column="resource_id" property="resourceId" jdbcType="BIGINT" />
    <result column="created_uid" property="createdUid" jdbcType="BIGINT" />
    <result column="created_time" property="createdTime" jdbcType="BIGINT" />
    <result column="updated_uid" property="updatedUid" jdbcType="BIGINT" />
    <result column="updated_time" property="updatedTime" jdbcType="BIGINT" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, role_id, resource_id, created_uid, created_time, updated_uid, updated_time
  </sql>
  <select id="selectById" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from t_role_resource
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteById" parameterType="java.lang.Long" >
    delete from t_role_resource
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.galaxyinternet.model.resource.RoleResource" >
    insert into t_role_resource (id, role_id, resource_id, 
      created_uid, created_time, updated_uid, 
      updated_time)
    values (#{id,jdbcType=BIGINT}, #{roleId,jdbcType=BIGINT}, #{resourceId,jdbcType=BIGINT}, 
      #{createdUid,jdbcType=BIGINT}, #{createdTime,jdbcType=BIGINT}, #{updatedUid,jdbcType=BIGINT}, 
      #{updatedTime,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.galaxyinternet.model.resource.RoleResource" >
    insert into t_role_resource
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="roleId != null" >
        role_id,
      </if>
      <if test="resourceId != null" >
        resource_id,
      </if>
      <if test="createdUid != null" >
        created_uid,
      </if>
      <if test="createdTime != null" >
        created_time,
      </if>
      <if test="updatedUid != null" >
        updated_uid,
      </if>
      <if test="updatedTime != null" >
        updated_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="roleId != null" >
        #{roleId,jdbcType=BIGINT},
      </if>
      <if test="resourceId != null" >
        #{resourceId,jdbcType=BIGINT},
      </if>
      <if test="createdUid != null" >
        #{createdUid,jdbcType=BIGINT},
      </if>
      <if test="createdTime != null" >
        #{createdTime,jdbcType=BIGINT},
      </if>
      <if test="updatedUid != null" >
        #{updatedUid,jdbcType=BIGINT},
      </if>
      <if test="updatedTime != null" >
        #{updatedTime,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByIdSelective" parameterType="com.galaxyinternet.model.resource.RoleResource" >
    update t_role_resource
    <set >
      <if test="roleId != null" >
        role_id = #{roleId,jdbcType=BIGINT},
      </if>
      <if test="resourceId != null" >
        resource_id = #{resourceId,jdbcType=BIGINT},
      </if>
      <if test="createdUid != null" >
        created_uid = #{createdUid,jdbcType=BIGINT},
      </if>
      <if test="createdTime != null" >
        created_time = #{createdTime,jdbcType=BIGINT},
      </if>
      <if test="updatedUid != null" >
        updated_uid = #{updatedUid,jdbcType=BIGINT},
      </if>
      <if test="updatedTime != null" >
        updated_time = #{updatedTime,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateById" parameterType="com.galaxyinternet.model.resource.RoleResource" >
    update t_role_resource
    set role_id = #{roleId,jdbcType=BIGINT},
      resource_id = #{resourceId,jdbcType=BIGINT},
      created_uid = #{createdUid,jdbcType=BIGINT},
      created_time = #{createdTime,jdbcType=BIGINT},
      updated_uid = #{updatedUid,jdbcType=BIGINT},
      updated_time = #{updatedTime,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  <!-- 删除 -->
	<delete id="delete" parameterType="java.util.Map">
		delete from t_role_resource
		<include refid="Base_Where_Clause" />
	</delete>
	
	<!-- 查询 -->
	<select id="select" resultMap="BaseResultMap" parameterType="java.util.Map">
		select
		<include refid="Base_Column_List" />
		from t_role_resource
		<include refid="Base_Where_Clause" />
		<if test="sorting != null">order by ${sorting}</if>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
	
	<!-- 查询总数 -->
	<select id="selectCount" resultType="java.lang.Long"
		parameterType="java.util.Map">
		select count(id) from t_role_resource
		<include refid="Base_Where_Clause" />
		<if test="sorting != null">order by ${sorting}</if>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
	<sql id="Base_Where_Clause">
		<where>
			<trim >
				<trim prefixOverrides="and">
					<if test="id != null"> and id = #{id,jdbcType=BIGINT}</if>
					<if test="roleId != null" > and role_id = #{roleId,jdbcType=BIGINT}</if>
				    <if test="resourceId != null" > and resource_id = #{resourceId,jdbcType=BIGINT}</if>
				    <if test="createdUid != null" > and created_uid = #{createdUid,jdbcType=BIGINT}</if>
				    <if test="createdTime != null" > and created_time = #{createdTime,jdbcType=BIGINT}</if>
				    <if test="updatedUid != null" > and updated_uid = #{updatedUid,jdbcType=BIGINT}</if>
				    <if test="updatedTime != null" > and updated_time = #{updatedTime,jdbcType=BIGINT}</if>
				</trim>
			</trim>
		</where>
	</sql>
  
  
  
</mapper>